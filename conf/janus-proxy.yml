

# General configuration. for some basic configuration 
general:
  daemonize: false                       # Whether Janus-proxy should run as a daemon
                                        # or not (default=run in foreground)
  # configs_folder: "/etc/janus-cloud"    # Configuration files folder for plugins, default is the same
                                        # with the folder containing this config file
  server_name: ""                       # IP address or hostname of this Janus proxy,
                                        # it will appear in an info request, and is used for addressing among proxies.
                                        # Default is empty, means this Janus proxy has no hostname
  session_timeout: 60                   # How long (in seconds) we should wait before
                                        # deciding a Janus session has timed out. A
                                        # session times out when no request is received
                                        # for session_timeout seconds (default=60s).
                                        # Setting this to 0 will disable the timeout
                                        # mechanism, which is NOT suggested as it may
                                        # risk having orphaned sessions (sessions not
                                        # controlled by any transport and never freed).
                                        # To avoid timeouts, keep-alives can be used.  
  server_db: "memory"                   # the url of the database storing the backend Janus server info.
                                        # Now only support memory or redis type.
                                        # the url for memory db is: "memory",
                                        # the url for redis is according to
                                        # <https://www.iana.org/assignments/uri-schemes/prov/redis>, for example:
                                        #      "redis://user:secret@localhost:6379/0" schema. default is memory
  server_select: "rr"                   # select algorithm for backend Janus server, now support "rr" (round robin),
                                        # "rand" (random), "lb" (load balance), "wr"(weighted random) and the
                                        # thirdparty method.
                                        # for the thirdparty method, it can be given in form "module_name:method_name".
                                        # default is "rr".

  api_secret: ""                        # String that all API requests must contain to be accepted/authorized by
                                        # the Janus-proxy. Useful if you're wrapping all Janus API requests in your
                                        # servers (that is, not in the browser, where you do the things your way) and you
                                        # don't want other application to mess with this Janus-proxy instance.
                                        # Furthermore, this api_secret is also included in all the requests to the backend
                                        # Janus server. Default is empty
log:
  log_to_stdout: true                   # Whether the Janus output should be written
                                        # to stdout or not (default=true)
  log_to_file: "/var/log/janus-proxy.log" # Whether to use a log file or not, if empty
                                        # means not to log to a file
  debug_level: 'DEBUG'                  # Debug/logging level, valid values are
                                        # DEBUG/INFO/WARN/ERROR/FATAL, default is DEBUG

  log_file_size: 104857600              # max size for one log file, default is 100M
  log_file_rotate: 10                   # rotate number for log file, default is 10

# Certificate and key to use for WSS and HTTPS (and passphrase if needed).
certificates:
  cert_pem: "/opt/janus-cloud/certs/mycert.pem"
  cert_key: "/opt/janus-cloud/certs/mycert.key"


# You can choose which of the available plugins should be
# enabled or not. the item in this list is with the format below,
# plugin_module_path(e.g. januscloud.plugins.echotest):plugin_fatory_name
plugins:   
  - januscloud.proxy.plugin.dummytest:DummyTestPlugin
  - januscloud.proxy.plugin.echotest:EchoTestPlugin
  - januscloud.proxy.plugin.videocall:VideoCallPlugin
  - januscloud.proxy.plugin.p2pcall:P2PCallPlugin
  - januscloud.proxy.plugin.videoroom:VideoRoomPlugin


# Configuration for the websocket transport. 
# Websocket transport module outputs the Janus api on websocket protocol just as Janus server
ws_transport:

  json: "indented"                  # Whether the JSON messages should be indented (default),
                                    # plain (no indentation) or compact (no indentation and no spaces)
  #pingpong_trigger: 30             # After how many seconds of idle, a PING should be sent, 0 means no ping would be
                                    # sent, default is 0
  #pingpong_timeout: 10             # After how many seconds of not getting a PONG, a timeout should be detected
                                    # default is 30
  ws: true                          # Whether to enable the WebSockets API
  ws_listen: '0.0.0.0:8288'         # WebSockets server listen addr

  wss: false                        # Whether to enable secure WebSockets
  wss_listen: '0.0.0.0:8289'       # WebSockets server secure listen addr, if enabled

  max_greenlet_num: 1024            # size of the greenlet pool for this transport, 0 means not limited

# Configuration about the RESTful api of janus-proxy. janus-proxy provide an other set of RESTful API for admin  
admin_api:
  json: "indented"                  # Whether the JSON messages should be indented (default),
                                    # plain (no indentation) or compact (no indentation and no spaces)
  http_listen: '0.0.0.0:8100'       # REST API server listen addr


# static configured backend Janus-gateway server besides the ones auto-registered by janus-sentinel
janus_server:
  - {name: 'server1', url: 'ws://127.0.0.1:8188', status: 0, session_timeout: 60}

